/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

ion-list {
  margin-bottom: 1em;
}

ion-list:last-of-type,
ion-list ion-list {
  margin-bottom: 0;
}

ion-item:not(:has(ion-item)):has(
    ion-input[helperText],
    ion-input[errorText],
    app-interval-input[helperText],
    app-interval-input[errorText]
  ) {
  --inner-padding-bottom: 0.35em;
}

ion-item:has(ion-list) > ion-label {
  flex-grow: 0 !important;
}

ion-item ion-list {
  flex: 1;
}

ion-item::part(native)::after {
  opacity: 0;
}

.ion-focused:not(:has(ion-item:focus-within)):has(
    ion-checkbox:focus-within,
    ion-button:focus-within,
    ion-datetime-button:focus-within
  )::part(native)::after,
.ion-focused
  ion-item:has(
    ion-checkbox:focus-within,
    ion-button:focus-within,
    ion-datetime-button:focus-within
  )::part(native)::after {
  background-color: var(--background-focused);
  opacity: var(--background-focused-opacity);
}

ion-item:not(:has(ion-item:hover)):has(ion-checkbox:hover)::part(
    native
  )::after {
  background-color: var(--background-hover);
  opacity: var(--background-hover-opacity);
}

ion-item ion-item:last-child {
  --border-width: 0;
}
