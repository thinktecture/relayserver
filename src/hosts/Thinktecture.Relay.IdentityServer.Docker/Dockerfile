#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
WORKDIR /app

FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
WORKDIR /src

COPY ["Thinktecture.Relay.Abstractions/Thinktecture.Relay.Abstractions.csproj", "Thinktecture.Relay.Abstractions/"]
RUN dotnet restore "Thinktecture.Relay.Abstractions/Thinktecture.Relay.Abstractions.csproj"

COPY ["Thinktecture.Relay.Server.Abstractions/Thinktecture.Relay.Server.Abstractions.csproj", "Thinktecture.Relay.Server.Abstractions/"]
RUN dotnet restore "Thinktecture.Relay.Server.Abstractions/Thinktecture.Relay.Server.Abstractions.csproj"

COPY ["Thinktecture.Relay.Server.Persistence.EntityFrameworkCore/Thinktecture.Relay.Server.Persistence.EntityFrameworkCore.csproj", "Thinktecture.Relay.Server.Persistence.EntityFrameworkCore/"]
RUN dotnet restore "Thinktecture.Relay.Server.Persistence.EntityFrameworkCore/Thinktecture.Relay.Server.Persistence.EntityFrameworkCore.csproj"

COPY ["Thinktecture.Relay.Server.Persistence.EntityFrameworkCore.PostgreSql/Thinktecture.Relay.Server.Persistence.EntityFrameworkCore.PostgreSql.csproj", "Thinktecture.Relay.Server.Persistence.EntityFrameworkCore.PostgreSql/"]
RUN dotnet restore "Thinktecture.Relay.Server.Persistence.EntityFrameworkCore.PostgreSql/Thinktecture.Relay.Server.Persistence.EntityFrameworkCore.PostgreSql.csproj"

COPY ["Thinktecture.Relay.IdentityServer/Thinktecture.Relay.IdentityServer.csproj", "Thinktecture.Relay.IdentityServer/"]
RUN dotnet restore "Thinktecture.Relay.IdentityServer/Thinktecture.Relay.IdentityServer.csproj"

COPY ["hosts/Thinktecture.Relay.IdentityServer.Docker/Thinktecture.Relay.IdentityServer.Docker.csproj", "hosts/Thinktecture.Relay.IdentityServer.Docker/"]
RUN dotnet restore "hosts/Thinktecture.Relay.IdentityServer.Docker/Thinktecture.Relay.IdentityServer.Docker.csproj"

COPY . .
WORKDIR "/src/hosts/Thinktecture.Relay.IdentityServer.Docker"
RUN dotnet build "Thinktecture.Relay.IdentityServer.Docker.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "Thinktecture.Relay.IdentityServer.Docker.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

EXPOSE 80
EXPOSE 443

ENTRYPOINT ["dotnet", "Thinktecture.Relay.IdentityServer.Docker.dll"]
