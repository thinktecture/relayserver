x-defaults: &defaults
  networks:
    - relayserver

x-rabbit-defaults: &rabbit-defaults
  <<: *defaults
  image: rabbitmq:management-alpine
  configs:
    - source: erlang-cookie
      target: /var/lib/rabbitmq/.erlang.cookie
      mode: 0600
x-rabbit-env: &rabbit-env
  RABBITMQ_DEFAULT_USER: guest
  RABBITMQ_DEFAULT_PASS: guest
  RABBITMQ_SERVER_START_ARGS: -rabbit cluster_nodes {['rabbit@relay-transport-rabbitmq-1','rabbit@relay-transport-rabbitmq-2'],disc} cluster_name rabbit@relayserver

x-db-connection: &db-connection
  DatabaseType: ${RELAYSERVER_DATABASE_TYPE:-PostgreSql} # PostgreSql or SqlServer
  ConnectionStrings__PostgreSql: host=relay-persistence-postgresql;database=relayserver;username=relayserver;password=<Strong!Passw0rd>
  ConnectionStrings__SqlServer: Server=relay-persistence-sqlserver;Database=relayserver;User Id=sa;Password=<Strong!Passw0rd>

x-logging: &logging
  Serilog__MinimumLevel__Default: Error
  Serilog__MinimumLevel__Override__Microsoft: Warning
  Serilog__MinimumLevel__Override__System: Warning
  Serilog__WriteTo__0__Name: Seq
  Serilog__WriteTo__0__Args__ServerUrl: http://relay-logging-seq

configs:
  erlang-cookie:
    content: VEhJUyBJUyBUSElOS1RFQ1RVUkUh
  curl-headers:
    content: |
      Accept: application/json
      Content-Type: application/json
      Api-Key: write-key
  test-tenant-1:
    content: |
      { "name": "TestTenant1", "displayName": "Test Tenant 1" }
  test-tenant-2:
    content: |
      { "name": "TestTenant2", "displayName": "Test Tenant 2" }

services:
  relay-transport-rabbitmq-1:
    <<: *rabbit-defaults
    container_name: relay-transport-rabbitmq-1
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      <<: *rabbit-env
      RABBITMQ_NODENAME: rabbit@relay-transport-rabbitmq-1
  relay-transport-rabbitmq-2:
    <<: *rabbit-defaults
    container_name: relay-transport-rabbitmq-2
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      <<: *rabbit-env
      RABBITMQ_NODENAME: rabbit@relay-transport-rabbitmq-2

  relay-logging-seq:
    <<: *defaults
    image: datalust/seq
    container_name: relay-logging-seq
    ports:
      - "5341:80"
    environment:
      ACCEPT_EULA: Y
    volumes:
      - seq-data:/data

  relay-persistence-postgresql:
    <<: *defaults
    image: postgres:15-alpine
    container_name: relay-persistence-postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: relayserver
      POSTGRES_PASSWORD: <Strong!Passw0rd>
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - "CMD-SHELL"
        - "pg_isready"
        - "-d"
        - "db_prod"
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 10s
  relay-persistence-sqlserver:
    <<: *defaults
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: relay-persistence-sqlserver
    user: root
    platform: linux/amd64
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: <Strong!Passw0rd>
      MSSQL_PID: Express
    volumes:
      - sqlserver-data:/var/opt/mssql/data
    healthcheck:
      test:
        - "CMD-SHELL"
        - "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '<Strong!Passw0rd>' -Q 'SELECT 1' || exit 1"
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 10s
  relay-server-migrations:
    <<: *defaults
    image: relay-server
    build:
      context: ..
      dockerfile: ./docker/Thinktecture.Relay.Server.Docker/Dockerfile
    container_name: relay-server-migrations
    environment:
      <<: [*db-connection, *logging]
      Serilog__Properties__System: Migration
    depends_on:
      relay-persistence-postgresql:
        condition: service_healthy
      relay-persistence-sqlserver:
        condition: service_healthy
    entrypoint:
      - "dotnet"
      - "Thinktecture.Relay.Server.Docker.dll"
      - "migrate-only=true"

  relay-management-api:
    <<: *defaults
    image: relay-management-api
    build:
      context: ..
      dockerfile: ./docker/Thinktecture.Relay.ManagementApi.Docker/Dockerfile
    container_name: relay-management-api
    ports:
      - "5004:5000"
    environment:
      <<: [*db-connection, *logging]
    depends_on:
      - relay-server-migrations

  relay-seed:
    <<: *defaults
    image: curlimages/curl
    container_name: relay-seed
    depends_on:
      - relay-server-migrations
      - relay-management-api
    configs:
      - source: curl-headers
        target: /headers
        mode: 0644
      - source: test-tenant-1
        target: /test-tenant-1.json
        mode: 0644
      - source: test-tenant-2
        target: /test-tenant-2.json
        mode: 0644
    command:
      - "sh"
      - "-c"
      - "curl -H @/headers -d @/test-tenant-1.json http://relay-management-api:5000/management/tenants && curl -H @/headers -d @/test-tenant-2.json http://relay-management-api:5000/management/tenants"

  relay-identityprovider:
    <<: *defaults
    image: quay.io/keycloak/keycloak:24.0
    container_name: relay-identityprovider
    ports:
      - "5002:5002"
    volumes:
      - ./keycloak_data:/opt/keycloak/data/import
    environment:
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: admin
        KC_HEALTH_ENABLED: true
        KC_METRICS_ENABLED: true
        KC_HOSTNAME_DEBUG: true
    command:
      - "start-dev"
      - "--http-port=5002"
      - "--import-realm"

  relay-server-a:
    <<: *defaults
    image: relay-server
    container_name: relay-server-a
    ports:
      - "5010:5000"
    environment:
      <<: [*db-connection, *logging]
      Serilog__Properties__System: RelayServerA
      RabbitMq__Uri: amqp://guest:guest@relay-transport-rabbitmq-1
    volumes:
      - relay-bodystore:/var/bodystore
    depends_on:
      - relay-server-migrations
      - relay-identityprovider
  relay-server-b:
    <<: *defaults
    image: relay-server
    container_name: relay-server-b
    ports:
      - "5011:5000"
    environment:
      <<: [*db-connection, *logging]
      Serilog__Properties__System: RelayServerB
      RabbitMq__Uri: amqp://guest:guest@relay-transport-rabbitmq-2
    volumes:
      - relay-bodystore:/var/bodystore
    depends_on:
      - relay-server-migrations
      - relay-identityprovider

  relay-connector-a1:
    <<: *defaults
    image: relay-connector
    build:
      context: ..
      dockerfile: ./docker/Thinktecture.Relay.Connector.Docker/Dockerfile
    container_name: relay-connector-a1
    environment:
      <<: *logging
      Serilog__Properties__System: Connector_A1
      RelayConnector__RelayServerBaseUri: http://relay-server-a:5000
      RelayConnector__TenantName: TestTenant1
    depends_on:
      - relay-server-a
  relay-connector-a2:
    <<: *defaults
    image: relay-connector
    container_name: relay-connector-a2
    environment:
      <<: *logging
      Serilog__Properties__System: Connector_A2
      RelayConnector__RelayServerBaseUri: http://relay-server-a:5000
      RelayConnector__TenantName: TestTenant2
    depends_on:
      - relay-server-a

  relay-connector-b1:
    <<: *defaults
    image: relay-connector
    container_name: relay-connector-b1
    environment:
      <<: *logging
      Serilog__Properties__System: Connector_B1
      RelayConnector__RelayServerBaseUri: http://relay-server-b:5000
      RelayConnector__TenantName: TestTenant1
    depends_on:
      - relay-server-b
  relay-connector-b2:
    <<: *defaults
    image: relay-connector
    container_name: relay-connector-b2
    environment:
      <<: *logging
      Serilog__Properties__System: Connector_B2
      RelayConnector__RelayServerBaseUri: http://relay-server-b:5000
      RelayConnector__TenantName: TestTenant2
    depends_on:
      - relay-server-b

  relay-httpbin:
    <<: *defaults
    image: kennethreitz/httpbin
    container_name: relay-httpbin
    platform: linux/amd64
    ports:
      - "8080:80"

volumes:
  seq-data:
  postgresql-data:
  sqlserver-data:
  relay-bodystore:

networks:
  relayserver:
    driver: bridge
    name: relayserver
